<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" x:Class="appswindows.Window1"
        mc:Ignorable="d"
        ResizeMode="NoResize" WindowStyle="None" WindowStartupLocation="CenterScreen"
        Title="MainWindow" Height="600" Width="1080">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="20" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Margin="0,0,0,0">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ImageStyle1" TargetType="{x:Type Image}">
            <Setter Property="FlowDirection" Value="LeftToRight"/>
            <Setter Property="OpacityMask" Value="{x:Null}"/>
        </Style>
        <ControlTemplate x:Key="ButtonBaseControlTemplate1" TargetType="{x:Type ButtonBase}">
            <Grid>
                <AdornerDecorator CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                    <Grid>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="30">
                            <Border.Effect>
                                <Binding Path="(materialDesign:ShadowAssist.ShadowDepth)" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <materialDesign:ShadowConverter/>
                                    </Binding.Converter>
                                </Binding>
                            </Border.Effect>
                        </Border>
                        <ProgressBar x:Name="ProgressBar" Background="{Binding (materialDesign:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding (materialDesign:ButtonProgressAssist.IndicatorForeground), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Left" Height="{TemplateBinding Height}" IsIndeterminate="{Binding (materialDesign:ButtonProgressAssist.IsIndeterminate), RelativeSource={RelativeSource TemplatedParent}}" Maximum="{Binding (materialDesign:ButtonProgressAssist.Maximum), RelativeSource={RelativeSource TemplatedParent}}" Minimum="{Binding (materialDesign:ButtonProgressAssist.Minimum), RelativeSource={RelativeSource TemplatedParent}}" Opacity="{Binding (materialDesign:ButtonProgressAssist.Opacity), RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource MaterialDesignLinearProgressBar}" Value="{Binding (materialDesign:ButtonProgressAssist.Value), RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ButtonBase}}}">
                            <ProgressBar.Visibility>
                                <Binding Path="(materialDesign:ButtonProgressAssist.IsIndicatorVisible)" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <BooleanToVisibilityConverter/>
                                    </Binding.Converter>
                                </Binding>
                            </ProgressBar.Visibility>
                        </ProgressBar>
                    </Grid>
                </AdornerDecorator>
                <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                    <materialDesign:Ripple.Clip>
                        <MultiBinding UpdateSourceTrigger="Default">
                            <Binding ElementName="border" Path="ActualWidth"/>
                            <Binding ElementName="border" Path="ActualHeight"/>
                            <Binding ElementName="border" Path="CornerRadius"/>
                            <Binding ElementName="border" Path="BorderThickness"/>
                        </MultiBinding>
                    </materialDesign:Ripple.Clip>
                </materialDesign:Ripple>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.23"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="67*"/>
            <RowDefinition Height="533*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>


        <Grid x:Name ="menu"  HorizontalAlignment="Stretch" Grid.Row="1" Background="#FF373A4D" Grid.RowSpan="2" >
            <Grid.RowDefinitions>
                <RowDefinition Height="70"/>
                <RowDefinition Height="530"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0"  Background="#FF373A4D" Height="70" VerticalAlignment="Bottom">
                <Border CornerRadius="30" Margin="0,0,156,10">
                    <Border.Background>
                        <ImageBrush ImageSource="icon/logo.png"/>
                    </Border.Background>
                </Border>
                <TextBlock HorizontalAlignment="Left" Margin="94,26,0,0" TextWrapping="Wrap" VerticalAlignment="Top" FontFamily="Yu Gothic UI Semibold" Foreground="White"><Run Text="GESTION D"/><Run Text="E S"/><Run Text="TOCK"/></TextBlock>
            </Grid>
            <ScrollViewer x:Name="scorl" HorizontalAlignment="Stretch" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Grid.Row="1" Margin="0,5,0,0">
                <StackPanel x:Name="Menu" Margin="10"/>
            </ScrollViewer>
        </Grid>
        <StackPanel x:Name="StackPanelMain" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Stretch" Background="#FFF8F8FA"/>
        <Grid HorizontalAlignment="Center" Margin="0,0,0,529" Width="830" Grid.Column="1" Grid.RowSpan="3">
            <Grid.Background>
                <ImageBrush/>
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <StackPanel VerticalAlignment="Center">
                <materialDesign:PopupBox  HorizontalAlignment="Right" Margin="10"  PlacementMode="BottomAndAlignRightEdges" StaysOpen="False">
                    <StackPanel Width="150">
                        <Button Content="Settings"/>
                        <Button Content="Account"/>
                        <Button Content="Help"/>
                        <Separator/>
                        <Button x:Name="logout" Content="Logout" Click="logout_Click"/>
                    </StackPanel>
                </materialDesign:PopupBox>
            </StackPanel>
            <Button Content="Button" HorizontalAlignment="Left" Margin="650,27,0,25" Width="27" RenderTransformOrigin="0.486,0.24" Height="Auto" Opacity="0.65">
                <Button.BorderBrush>
                    <ImageBrush/>
                </Button.BorderBrush>
                <Button.Foreground>
                    <ImageBrush/>
                </Button.Foreground>
                <Button.Background>
                    <ImageBrush ImageSource="icon/bell (4).png"/>
                </Button.Background>
            </Button>
            <Button Content="" HorizontalAlignment="Left" Height="10" Margin="666,25,0,0" VerticalAlignment="Top" Width="11" Style="{DynamicResource ButtonStyle1}" RenderTransformOrigin="1,1.5" Background="#FF8F0101" BorderBrush="White">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="5.259"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
                <Button.Foreground>
                    <ImageBrush/>
                </Button.Foreground>
            </Button>
            <TextBlock x:Name="nime" Text="nime user" Margin="722,27,46,25" TextAlignment="Center" FontFamily="Nirmala UI" Opacity="0.6" FontWeight="Bold"/>
            <Button Content="" HorizontalAlignment="Left" Height="22" Margin="697,25,0,0" VerticalAlignment="Top" Width="25" Style="{DynamicResource ButtonStyle1}" RenderTransformOrigin="1,1.5">
                <Button.Background>
                    <ImageBrush ImageSource="icon/Max-R_Headshot (1).jpg"/>
                </Button.Background>
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="1.074"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
                <Button.BorderBrush>
                    <ImageBrush/>
                </Button.BorderBrush>
                <Button.Foreground>
                    <ImageBrush/>
                </Button.Foreground>
            </Button>

        </Grid>
    </Grid>
</Window>
